name: Run PlayMode and EditMode tests
on: 
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master
  workflow_dispatch:

jobs:
  checkLicense:
    name: Check if UNITY_LICENSE is set in github secrets
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checkLicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checkLicense_job
        run: |
            echo "Skip activation job: ${{ secrets.UNITY_LICENSE != '' }}"
            echo "::set-output name=is_unity_license_set::${{ secrets.UNITY_LICENSE != '' }}"

  activation:
    name: Request activation file ðŸ”‘
    needs: [checkLicense]
    if: needs.checkLicense.outputs.is_unity_license_set == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Request manual activation file
        id: getManualLicenseFile
        uses: game-ci/unity-request-activation-file@v2.0-alpha-1
        with:
          unityVersion: 2020.3.15f2

      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.getManualLicenseFile.outputs.filePath }}
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  unityTest:
    name: Run PlayMode and EditorMode tests for Unity project
    needs: [checkLicense]
    if: needs.checkLicense.outputs.is_unity_license_set == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Run PlayMode and EditMode tests
        uses: game-ci/unity-test-runner@v2.0-alpha-6
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Store test artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results
          path: artifacts